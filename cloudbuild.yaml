steps:
- name: gcr.io/$PROJECT_ID/zip
  args: ['-r', 'utils-$BUILD_ID.zip', 'package/utils']
artifacts:
  objects:
    location: 'gs://develop-test-tf/'
    paths: ['utils-$BUILD_ID.zip']


# steps:
# - name: gcr.io/cloud-builders/docker
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/zip', '.']

# images: ['gcr.io/$PROJECT_ID/zip']
# steps:
# - name: ubuntu
#   entrypoint: bash
#   args: 
#    - -c 
#    - |
#      # Installing zip executable
#      apt install zip &&
#      zip -r myfiles.zip package/utils &&
#      ls -l /workspace/*

# ["zip", "-r", "myfiles.zip", "package/utils"]
# artifacts:
#   objects:
#     location: 'gs://develop-test-tf/'
#     paths: ['myfiles.zip']
# apt install zip

# steps:
# - id: "Store Values"
#   name: ubuntu
#   entrypoint: bash
#   args:
#     - -c
#     - |
#       # Save a value to persistent volume mount: "/workspace"
#       echo "First Value" > /workspace/first.txt &&
#       # Save another
#       expr 1 + 1 > /workspace/second.txt
# # In the next step, everything in the environment is discarded
# # EXCEPT items on "/workspace"
# - id: "Read Values"
#   name: ubuntu
#   entrypoint: bash
#   args:
#     - -c
#     - |
#       # Read from "/workspace"
#       echo "First we saved " $(cat /workspace/first.txt) &&
#       echo "Then we saved " $(cat /workspace/second.txt)


# --------------------------
# Step:1
# initially u shd build zip image, since we are not able to zip files,
# So we created custom image and pushed to container registry
# steps:
# - name: gcr.io/cloud-builders/docker
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/zip', '.']

# images: ['gcr.io/$PROJECT_ID/zip']
# ----------------